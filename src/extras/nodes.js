// Generated by CoffeeScript 1.12.3
(function() {
  'use strict';
  var makeNode, nodes;

  makeNode = function(type, props) {
    return function() {
      var args, node;
      node = {
        type: type
      };
      args = arguments;
      props.forEach(function(prop, index) {
        node[prop] = args[index];
      });
      return node;
    };
  };

  nodes = {
    makeBlock: makeNode('block', ['statements']),
    makeIf: makeNode('if', ['test', 'consequent', 'alternate']),
    makeWhile: makeNode('while', ['test', 'body']),
    makeAssignment: makeNode('assignment', ['name', 'expression']),
    makeUnary: makeNode('unary', ['operator', 'expression']),
    makeBinary: makeNode('binary', ['operator', 'left', 'right']),
    makeNumber: makeNode('number', ['value']),
    makeVar: makeNode('var', ['name']),
    makeSub: makeNode('sub', ['name', 'expression'])
  };

  if (window.fungify == null) {
    window.fungify = {};
  }

  Object.assign(window.fungify, {
    nodes: nodes
  });

}).call(this);
